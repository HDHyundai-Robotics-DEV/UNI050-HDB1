<?xml version="1.0"?>
<robot name="uni_base" xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:arg name="laser_visual"  default="true"/>
  <xacro:arg name="camera_visual" default="false"/>
  <xacro:arg name="imu_visual"    default="false"/>
<!--  <xacro:arg name="gazebo_controllers" default="$(find uni_gazebo)/config/gz_controller_params.yaml" />-->

  <gazebo reference="base_link">
    <material>Gazebo/White</material>
  </gazebo>

  <gazebo>
<!--     Use gazebo_ros_joint_state_publisher instead of publishWheelJointState-->
    <plugin name="joint_states" filename="libgazebo_ros_joint_state_publisher.so">
      <joint_name>wheel_right_joint</joint_name>
      <joint_name>wheel_left_joint</joint_name>
    </plugin>

    <plugin name='gazebo_diff_controller' filename='libgazebo_ros_diff_drive.so'>
      <ros>
        <!-- Set namespace -->
        <namespace>/</namespace>
        <!-- Remap default topics -->
        <remapping>cmd_vel:=cmd_vel</remapping>
        <remapping>odom:=/robot/odom</remapping>
      </ros>

      <!-- Replace camelCase elements with camel_case ones -->
      <update_rate>100</update_rate>
      <left_joint>wheel_left_joint</left_joint>
      <right_joint>wheel_right_joint</right_joint>
      <wheel_separation>0.694</wheel_separation>
      <wheel_diameter>0.13</wheel_diameter>
      <odometry_frame>odom</odometry_frame>

      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>

      <!-- wheelTorque and wheelAcceleration now have max_ prefix -->
      <max_wheel_torque>20</max_wheel_torque>
      <max_acceleration>1.0</max_acceleration>

    </plugin>
  </gazebo>

  <gazebo reference="wheel_left_link">
    <mu1>1</mu1>
    <mu2>1</mu2>
    <kp>10000000.0</kp>
    <kd>1.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="wheel_right_link">
    <mu1>1</mu1>
    <mu2>1</mu2>
    <kp>10000000.0</kp>
    <kd>1.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="caster_front_right_link">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>1000000.0</kp>
    <kd>6.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="caster_front_left_link">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>1000000.0</kp>
    <kd>6.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="caster_back_right_link">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>1000000.0</kp>
    <kd>6.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="caster_back_left_link">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>1000000.0</kp>
    <kd>6.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="imu_link">
    <sensor name="imu" type="imu">
    <visualize>$(arg imu_visual)</visualize>
    <always_on>true</always_on>
    <update_rate>100</update_rate>
    <imu>
      <angular_velocity>
        <x>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
          </noise>
        </x>
        <y>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
          </noise>
        </y>
        <z>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
          </noise>
        </z>
      </angular_velocity>
      <linear_acceleration>
        <x>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
          </noise>
        </x>
        <y>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
          </noise>
        </y>
        <z>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
          </noise>
        </z>
      </linear_acceleration>
    </imu>

    <plugin name="gazebo_imu_controller" filename="libgazebo_ros_imu_sensor.so">
      <ros>
        <namespace>/robot</namespace>
        <remapping>~/out:=imu</remapping>
      </ros>
      <frame_name>imu_link</frame_name>
      <initial_orientation_as_reference>false</initial_orientation_as_reference>
    </plugin>
    </sensor>
    <material>Gazebo/White</material>
  </gazebo>

  <gazebo reference="front_laser">
    <material>Gazebo/FlatBlack</material>
    <sensor type="ray" name="sick_tim_571">
      <visualize>$(arg laser_visual)</visualize>
      <update_rate>30</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.15</min>
          <max>15</max>
          <resolution>0.015</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_lidar_controller" filename="libgazebo_ros_ray_sensor.so">-->
        <ros>
          <namespace>/robot</namespace>
          <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>front_laser</frame_name>
      </plugin>
    </sensor>
  </gazebo>


<!--  <gazebo reference="camera_depth_frame">-->
<!--    <material>Gazebo/FlatBlack</material>-->
<!--    <link name="camera_depth_frame">-->
<!--    <sensor type="depth" name="camera">-->
<!--      <update_rate>60</update_rate>-->
<!--      <visualize>$(arg camera_visual)</visualize>-->
<!--      <always_on>true</always_on>-->
<!--      <camera name="camera">>-->
<!--        <horizontal_fov>1.085595</horizontal_fov>-->
<!--        <image>-->
<!--            <width>640</width>-->
<!--            <height>480</height>-->
<!--            <format>R8G8B8</format>-->
<!--        </image>-->
<!--        <clip>-->
<!--            <near>0.03</near>-->
<!--            <far>100</far>-->
<!--        </clip>-->
<!--        <distortion>-->
<!--          <k1>0.0</k1>-->
<!--          <k2>0.0</k2>-->
<!--          <k3>0.0</k3>-->
<!--          <p1>0.0</p1>-->
<!--          <p2>0.0</p2>-->
<!--        </distortion>-->
<!--      </camera>-->
<!--      <plugin name="gazebo_camera_controller" filename="libgazebo_ros_camera.so">-->
<!--        <ros>-->
<!--          <namespace>/</namespace>-->
<!--&lt;!&ndash;          <remapping>custom_camera/image_raw:=custom_camera/custom_image</remapping>&ndash;&gt;-->
<!--&lt;!&ndash;          <remapping>custom_camera/image_depth:=custom_camera/custom_image_depth</remapping>&ndash;&gt;-->
<!--&lt;!&ndash;          <remapping>custom_camera/camera_info:=custom_camera/custom_info_raw</remapping>&ndash;&gt;-->
<!--&lt;!&ndash;          <remapping>custom_camera/camera_info_depth:=custom_camera/custom_info_depth</remapping>&ndash;&gt;-->
<!--&lt;!&ndash;          <remapping>custom_camera/points:=custom_camera/custom_points</remapping>&ndash;&gt;-->
<!--        </ros>-->
<!--        &lt;!&ndash; Set camera name. If empty, defaults to sensor name (i.e. "sensor_name") &ndash;&gt;-->
<!--        <camera_name>camera</camera_name>-->

<!--        &lt;!&ndash; Set TF frame name. If empty, defaults to link name (i.e. "link_name") &ndash;&gt;-->
<!--        <frame_name>camera_depth_optical_frame</frame_name>-->

<!--        <hack_baseline>0.07</hack_baseline>-->

<!--        &lt;!&ndash; No need to repeat distortion parameters or to set autoDistortion &ndash;&gt;-->
<!--        <min_depth>0.001</min_depth>-->
<!--        <max_depth>300.0</max_depth>-->
<!--      </plugin>-->
<!--    </sensor>-->
<!--    </link>-->
<!--  </gazebo>-->

</robot>
